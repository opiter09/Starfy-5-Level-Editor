If you can't tell, the file of interest is stage/mapoo.bin. Most of its chunks are LZSS-decompressed.

Further, it has been determined that 557 of the chunks in that long 569 to 2074 strech of bin files have a
non-zero in their fifth byte. This matches up with the fact that there are about 555 rooms, according to my
split of roominfo.bin.

"That's not right," you say, "roomSplit.py gives you 896 files!" Ah, but Starfy 5 is very, very weird. 
World 9 and 10 are just 09- and 10-, but Worlds 1-8 use the four normal levels from 11- through 18-, and the
three secret levels from 01- through 08-. This, combined with 00-, gives us 555 rooms. I then ran some code
and found out that there are exactly two rooms from 01- to 08- that never made it over: 01-01-04 and
08-04-19. With these we get our 557, and there we go!

To be clear, the useful files in question are 0569.bin through 1125.bin. Helpfully, the file batchBatchTwo.py
will both decompress these files, and append world-level-room designations to their names.

Looking at any of the good files, the first 16 bytes are a header. If you multiply the first four (as a
little-endian integer) by the second four, then multiply that by 2 (since everything below seems to be
two-byte integers), and then by 3, and then add 16, you always get the file size. That implies that each third
of the post-header file is a grid for the room, with each presumably being different properties (collision,
entities, etc.).